require('dotenv').config()
let requests = require('unrecognized_requests')
const { Telegraf } = require('telegraf')
const bot = new Telegraf(process.env.BOT_TOKEN)
const {Markup} = require('telegraf')
const SYMBOLS_VOCAB = require('./symbols/symbols')
const MATH_SYMBOLS = require('./symbols/math')
const FRACTIONS = require('./symbols/fractions')
const CIRCLES = require('./symbols/circles')
const ARROWS = require('./symbols/arrows')
const STARS = require('./symbols/stars')
const NOTES = require('./symbols/notes')
const SQUARES = require('./symbols/squares')
const SNOWFLAKES = require('./symbols/snowflakes')
const CURRENCIES = require('./symbols/currencies')
const CHESS = require('./symbols/chess')
const POINTERS = require('./symbols/pointers')
const CROSSES = require('./symbols/crosses')
const TRIANGLES = require('./symbols/triangles')
const SUITS = require('./symbols/suits')
const ZODIAC = require('./symbols/zodiacsigns')
const GREEK_LETTERS = require('./symbols/greekletters')

try{
    bot.start((ctx) => ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${ctx.message.from.first_name}üëã
–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞, —á—Ç–æ–±—ã —è 
—Å–º–æ–≥ –Ω–∞–π—Ç–∏ –µ–≥–æ –¥–ª—è —Ç–µ–±—èüôÇ
/help - —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ.`,
    Markup.keyboard([        
        ['–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã'],
        ['–î—Ä–æ–±–∏', '–ö—Ä—É–≥–∏'],
        ['–°—Ç—Ä–µ–ª–∫–∏', '–ó–≤—ë–∑–¥—ã'],
        ['–ù–æ—Ç—ã', '–ö–≤–∞–¥—Ä–∞—Ç—ã'],
        ['–°–Ω–µ–∂–∏–Ω–∫–∏', '–í–∞–ª—é—Ç—ã'],
        ['–®–∞—Ö–º–∞—Ç—ã', '–£–∫–∞–∑–∞—Ç–µ–ª–∏'],
        ['–ö—Ä–µ—Å—Ç–∏–∫–∏', '–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏'],
        ['–ö–∞—Ä—Ç–æ—á–Ω—ã–µ –º–∞—Å—Ç–∏', '–ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞'],
        ['–ì—Ä–µ—á–µ—Å–∫–∏–µ –±—É–∫–≤—ã']
    ]).resize(),
    console.log('UserName: ' + ctx.message.from.first_name)))

    bot.hears('–ü—Ä–∏–≤–µ—Ç',(ctx) => ctx.replyWithSticker('CAACAgIAAxkBAAECwRBhGTo7loZ3iVc43jfvYvFAB4hNUQACDgADr8ZRGrdbgux-ASf3IAQ'))
    bot.hears('–ø—Ä–∏–≤–µ—Ç',(ctx) => ctx.replyWithSticker('CAACAgIAAxkBAAECwRBhGTo7loZ3iVc43jfvYvFAB4hNUQACDgADr8ZRGrdbgux-ASf3IAQ'))
    bot.hears('–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã',(ctx) => ctx.reply(MATH_SYMBOLS))
    bot.hears('–î—Ä–æ–±–∏',(ctx) => ctx.reply(FRACTIONS))
    bot.hears('–ö—Ä—É–≥–∏',(ctx) => ctx.reply(CIRCLES))
    bot.hears('–°—Ç—Ä–µ–ª–∫–∏',(ctx) => ctx.reply(ARROWS))
    bot.hears('–ó–≤—ë–∑–¥—ã',(ctx) => ctx.reply(STARS))
    bot.hears('–ù–æ—Ç—ã',(ctx) => ctx.reply(NOTES))
    bot.hears('–ö–≤–∞–¥—Ä–∞—Ç—ã',(ctx) => ctx.reply(SQUARES))
    bot.hears('–°–Ω–µ–∂–∏–Ω–∫–∏',(ctx) => ctx.reply(SNOWFLAKES))
    bot.hears('–í–∞–ª—é—Ç—ã',(ctx) => ctx.reply(CURRENCIES))
    bot.hears('–®–∞—Ö–º–∞—Ç—ã',(ctx) => ctx.reply(CHESS))
    bot.hears('–£–∫–∞–∑–∞—Ç–µ–ª–∏',(ctx) => ctx.reply(POINTERS))
    bot.hears('–ö—Ä–µ—Å—Ç–∏–∫–∏',(ctx) => ctx.reply(CROSSES))
    bot.hears('–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏',(ctx) => ctx.reply(TRIANGLES))
    bot.hears('–ö–∞—Ä—Ç–æ—á–Ω—ã–µ –º–∞—Å—Ç–∏',(ctx) => ctx.reply(SUITS))
    bot.hears('–ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞',(ctx) => ctx.reply(ZODIAC))
    bot.hears('–ì—Ä–µ—á–µ—Å–∫–∏–µ –±—É–∫–≤—ã',(ctx) => ctx.reply(GREEK_LETTERS))

    const stick = [
        {source: './stickers/sticker.png'},
        {source: './stickers/sticker1.png'},
        {source: './stickers/sticker2.png'},
        {source: './stickers/sticker3.png'},
    ]
    const stickersId = [
        'CAACAgEAAxkBAAECwF5hGGfQxMiyYMl1KKVRUH7gd4TiJwACIgADOA6CEd4wNMezt3dkIAQ',
        'CAACAgIAAxkBAAECwGBhGGibWyHjJ5mMkEBFLEU_qLGMQgAClQADMNSdET3bz5sVDcdXIAQ',
        'CAACAgEAAxkBAAECwGRhGGi763nUl2Y2DFtZo3eqagoVzwACKAADOA6CEeJAhB3GAAE0IiAE',
        'CAACAgIAAxkBAAECwGZhGGjN9Z899i3aKd3meX-2GUnXrQAC5QEAAsoDBgv53De4M5fp3SAE',
        'CAACAgIAAxkBAAECwGxhGGjdmXXc1Ob81y3xJ9exhZ1QFQAC-gEAAsoDBgshTqIuBniG0yAE',
        'CAACAgIAAxkBAAECwHhhGGk0ZZoq_jEKdxR7AAGj9rjZjCcAAogAAzDUnRFeG_Z7GidLASAE',
        'CAACAgIAAxkBAAECwPlhGReLVhEFOyl4yOg7-LtUnGKC-wACBQADr8ZRGpWJICJ8NGY0IAQ',
        'CAACAgIAAxkBAAECwGJhGGilHUy-5J1ndh_pmTsceXSWmwAClgADMNSdEZUMWC6l9JCyIAQ',
        'CAACAgIAAxkBAAECwGhhGGjSSCtRO8GeC7wfVqdOfBnh4gAC7gEAAsoDBgvfV0-V7BmYhiAE',
        'CAACAgIAAxkBAAECwGphGGjW7jav9-qfqL5FZiThCKdG3QAC7AEAAsoDBgtOCtB02_5FPiAE',
        'CAACAgIAAxkBAAECwG5hGGjwomac5naWnHP_Mna1_RUo1wAC1gADVp29Cgl1yQziLyEKIAQ',
        'CAACAgIAAxkBAAECwHBhGGjzeHoSygIx3rS7027pTe_b0gAC3AADVp29Cpy9Gm5Tg192IAQ',
        'CAACAgIAAxkBAAECwHJhGGj_6pyOHt0GB9r26UfrQjXMPQAC2gADVp29CnKcNxveBxs7IAQ',
        'CAACAgIAAxkBAAECwHphGGk3MKSmJ1PXtZex25tKgBM5zAACjgADMNSdEbaKJ1M7GR8YIAQ',
        'CAACAgIAAxkBAAECwPthGReRaYh-8VL3DYg_ok3jp4feygACFAADr8ZRGgu7XTT4sVnxIAQ',
        'CAACAgIAAxkBAAECwP1hGRfAkLO1h8Hj2Er2wI21QiDpLAACBAADr8ZRGhhqTEj6gDwaIAQ'
    ]
    let last = -1
    function getRandomInt(min, max) {
        let rd
        rd = Math.floor(Math.random() * (max - min + 1)) + min
        if(rd===last) {
            do {
                rd = Math.floor(Math.random() * (max - min + 1)) + min
    
            } while (rd===last); 
        }
        last = rd
        return rd
    }

    bot.on('voice', (ctx) => ctx.replyWithSticker(stickersId[getRandomInt(0,6)]))   
    bot.on('sticker', (ctx) => ctx.replyWithSticker(stickersId[getRandomInt(0,15)]))

    bot.help((ctx) => ctx.reply(`–ß—Ç–æ –º–æ–∂–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç? –û–Ω –∏—â–µ—Ç —Å–∏–º–≤–æ–ª 
–ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –ø—Ä–∏—Å–ª–∞–µ—Ç –µ–≥–æ —Ç–µ–±–µ, —á—Ç–æ–±—ã
—Ç—ã –º–æ–≥ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –≥–¥–µ —É–≥–æ–¥–Ω–æ!
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ –∏ –±–æ—Ç
–æ—Ç–ø—Ä–∞–≤–∏—Ç –µ–≥–æ —Ç–µ–±–µ. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ–∏—Å–∫
–ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Å–∏–º–≤–æ–ª–æ–≤.`))

    bot.on('text', (ctx) => {
        let input = ctx.message.text.toLowerCase()
        let res = findSymbol(input)
        ctx.reply(res)
    })

    function findSymbol(input) {
        let vocab = SYMBOLS_VOCAB
        let value = vocab.get(input)
        if(value==undefined) {
            writeRequest(input)
            return `–¢–∞–∫–æ–π —Å–∏–º–≤–æ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω...üôÅ
–ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ-–¥—Ä—É–≥–æ–º—É.`           
        } else
        return value
    }

    function writeRequest(message) {
            requests += `${message}\n`  
    }

    function readRequest() {
            console.log(requests)
        }

} catch {
    console.log('–û—à–∏–±–∫–∞')
}

bot.launch()
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')
readRequest()



